#-----------------------------------------------------------
# Vivado v2019.2 (64-bit)
# SW Build 2708876 on Wed Nov  6 21:40:23 MST 2019
# IP Build 2700528 on Thu Nov  7 00:09:20 MST 2019
# Start of session at: Sat May 23 19:20:09 2020
# Process ID: 8444
# Current directory: C:/Users/Peter/Desktop/Projects/FPGA/pynq
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent8464 C:\Users\Peter\Desktop\Projects\FPGA\pynq\pynq.xpr
# Log file: C:/Users/Peter/Desktop/Projects/FPGA/pynq/vivado.log
# Journal file: C:/Users/Peter/Desktop/Projects/FPGA/pynq\vivado.jou
#-----------------------------------------------------------
start_gui
open_project C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.xpr
update_compile_order -fileset sources_1
set_property  ip_repo_paths  {} [current_project]
update_ip_catalog
set_property  ip_repo_paths  C:/Users/Peter/Desktop/Projects/FPGA/accel [current_project]
update_ip_catalog
update_ip_catalog -rebuild
open_bd_design {C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd}
delete_bd_objs [get_bd_nets conv_accel_0_s00_axis_input_tready] [get_bd_nets conv_accel_0_m00_axis_output_tvalid] [get_bd_nets conv_accel_0_m00_axis_output_tdata] [get_bd_nets conv_accel_0_m00_axis_output_tstrb] [get_bd_intf_nets axi_dma_0_M_AXIS_MM2S] [get_bd_intf_nets conv_accel_0_M00_AXIS_output] [get_bd_nets axi_dma_0_m_axis_mm2s_tdata] [get_bd_nets axi_dma_0_m_axis_mm2s_tkeep] [get_bd_nets axi_dma_0_m_axis_mm2s_tlast] [get_bd_nets axi_dma_0_m_axis_mm2s_tvalid] [get_bd_nets conv_accel_0_m00_axis_output_tlast] [get_bd_nets axi_dma_0_s_axis_s2mm_tready] [get_bd_cells conv_accel_0]
startgroup
create_bd_cell -type ip -vlnv peteryuen:fl:conv_accel:1.0 conv_accel_0
endgroup
connect_bd_intf_net [get_bd_intf_pins conv_accel_0/AXIS_MST] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
connect_bd_intf_net [get_bd_intf_pins conv_accel_0/AXIS_SLV] [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S]
undo
undo
undo
undo
delete_bd_objs [get_bd_nets conv_accel_0_s00_axis_input_tready] [get_bd_nets conv_accel_0_m00_axis_output_tvalid] [get_bd_nets conv_accel_0_m00_axis_output_tdata] [get_bd_nets conv_accel_0_m00_axis_output_tstrb] [get_bd_intf_nets axi_dma_0_M_AXIS_MM2S] [get_bd_intf_nets conv_accel_0_M00_AXIS_output] [get_bd_nets axi_dma_0_m_axis_mm2s_tdata] [get_bd_nets axi_dma_0_m_axis_mm2s_tkeep] [get_bd_nets axi_dma_0_m_axis_mm2s_tlast] [get_bd_nets axi_dma_0_m_axis_mm2s_tvalid] [get_bd_nets conv_accel_0_m00_axis_output_tlast] [get_bd_nets axi_dma_0_s_axis_s2mm_tready] [get_bd_cells conv_accel_0]
startgroup
create_bd_cell -type ip -vlnv peteryuen:fl:conv_accel:1.0 conv_accel_0
endgroup
connect_bd_intf_net [get_bd_intf_pins conv_accel_0/AXIS_MST] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
connect_bd_intf_net [get_bd_intf_pins conv_accel_0/AXIS_SLV] [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S]
startgroup
set_property -dict [list CONFIG.c_s_axis_s2mm_tdata_width.VALUE_SRC USER] [get_bd_cells axi_dma_0]
set_property -dict [list CONFIG.c_s_axis_s2mm_tdata_width {64}] [get_bd_cells axi_dma_0]
endgroup
startgroup
set_property -dict [list CONFIG.c_s_axis_s2mm_tdata_width.VALUE_SRC PROPAGATED CONFIG.c_single_interface.VALUE_SRC USER] [get_bd_cells axi_dma_0]
set_property -dict [list CONFIG.c_m_axi_mm2s_data_width {64} CONFIG.c_m_axis_mm2s_tdata_width {64} CONFIG.c_mm2s_burst_size {256} CONFIG.c_single_interface {0}] [get_bd_cells axi_dma_0]
endgroup
connect_bd_net [get_bd_pins conv_accel_0/mst_data] [get_bd_pins axi_dma_0/s_axis_s2mm_tdata]
startgroup
set_property -dict [list CONFIG.c_s_axis_s2mm_tdata_width.VALUE_SRC USER] [get_bd_cells axi_dma_0]
set_property -dict [list CONFIG.c_s_axis_s2mm_tdata_width {32}] [get_bd_cells axi_dma_0]
endgroup
connect_bd_net [get_bd_pins conv_accel_0/mst_last] [get_bd_pins axi_dma_0/s_axis_s2mm_tlast]
connect_bd_net [get_bd_pins conv_accel_0/mst_valid] [get_bd_pins axi_dma_0/s_axis_s2mm_tvalid]
connect_bd_net [get_bd_pins conv_accel_0/mst_ready] [get_bd_pins axi_dma_0/s_axis_s2mm_tready]
connect_bd_net [get_bd_pins conv_accel_0/slv_valid] [get_bd_pins axi_dma_0/m_axis_mm2s_tready]
connect_bd_net [get_bd_pins conv_accel_0/slv_last] [get_bd_pins axi_dma_0/m_axis_mm2s_tlast]
connect_bd_net [get_bd_pins conv_accel_0/slv_data] [get_bd_pins axi_dma_0/m_axis_mm2s_tdata]
connect_bd_net [get_bd_pins conv_accel_0/slv_ready] [get_bd_pins axi_dma_0/m_axis_mm2s_tready]
connect_bd_net [get_bd_pins conv_accel_0/clk] [get_bd_pins processing_system7_0/FCLK_CLK0]
connect_bd_net [get_bd_pins conv_accel_0/aresetn] [get_bd_pins rst_ps7_0_100M/peripheral_aresetn]
regenerate_bd_layout
save_bd_design
reset_run main_axi_dma_0_0_synth_1
reset_run synth_1
launch_runs synth_1 -jobs 4
wait_on_run synth_1
launch_runs impl_1 -jobs 4
wait_on_run impl_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
wait_on_run impl_1
write_hw_platform -fixed -force  -include_bit -file C:/Users/Peter/Downloads/main_wrapper.xsa
write_hw_platform -fixed -force  -include_bit -file C:/Users/Peter/Downloads/main_wrapper.xsa
write_hw_platform -fixed -force  -include_bit -file C:/Users/Peter/Downloads/export/main_wrapper.xsa
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
upgrade_ip -vlnv peteryuen:fl:conv_accel:1.0 [get_ips  main_conv_accel_0_2] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips main_conv_accel_0_2] -no_script -sync -force -quiet
generate_target all [get_files  C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd]
catch { config_ip_cache -export [get_ips -all main_conv_accel_0_2] }
catch { config_ip_cache -export [get_ips -all main_auto_pc_0] }
catch { config_ip_cache -export [get_ips -all main_auto_us_0] }
catch { config_ip_cache -export [get_ips -all main_auto_pc_1] }
export_ip_user_files -of_objects [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd]
launch_runs -jobs 8 main_conv_accel_0_2_synth_1
export_simulation -of_objects [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd] -directory C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files -ipstatic_source_dir C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/modelsim} {questa=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/questa} {riviera=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/riviera} {activehdl=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
upgrade_ip -vlnv peteryuen:fl:conv_accel:1.0 [get_ips  main_conv_accel_0_2] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips main_conv_accel_0_2] -no_script -sync -force -quiet
generate_target all [get_files  C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd]
catch { config_ip_cache -export [get_ips -all main_conv_accel_0_2] }
catch { config_ip_cache -export [get_ips -all main_auto_pc_0] }
catch { config_ip_cache -export [get_ips -all main_auto_us_0] }
catch { config_ip_cache -export [get_ips -all main_auto_pc_1] }
export_ip_user_files -of_objects [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd]
launch_runs -jobs 8 main_conv_accel_0_2_synth_1
export_simulation -of_objects [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd] -directory C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files -ipstatic_source_dir C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/modelsim} {questa=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/questa} {riviera=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/riviera} {activehdl=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
report_ip_status -name ip_status 
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 8
wait_on_run impl_1
write_hw_platform -fixed -force  -include_bit -file C:/Users/Peter/Downloads/export/main_wrapper.xsa
startgroup
set_property -dict [list CONFIG.PCW_QSPI_GRP_SINGLE_SS_ENABLE {1} CONFIG.PCW_I2C0_PERIPHERAL_ENABLE {1}] [get_bd_cells processing_system7_0]
endgroup
save_bd_design
create_bd_design "float"
update_compile_order -fileset sources_1
make_wrapper -files [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/float/float.bd] -top
add_files -norecurse C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/float/hdl/float_wrapper.v
update_compile_order -fileset sources_1
open_bd_design {C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd}
open_bd_design {C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/float/float.bd}
current_bd_design main
set tmpCopyObjs [concat  [get_bd_cells {axi_mem_intercon ps7_0_axi_periph processing_system7_0 conv_accel_0 xlconcat_0 axi_dma_0 axi_intc_0 rst_ps7_0_100M}] [get_bd_intf_ports {DDR FIXED_IO}] [get_bd_intf_nets {conv_accel_0_AXIS_MST axi_dma_0_M_AXI_MM2S axi_mem_intercon_M00_AXI processing_system7_0_M_AXI_GP0 axi_dma_0_M_AXI_S2MM ps7_0_axi_periph_M01_AXI processing_system7_0_FIXED_IO ps7_0_axi_periph_M00_AXI processing_system7_0_DDR axi_dma_0_M_AXIS_MM2S}] [get_bd_nets {axi_dma_0_mm2s_introut conv_accel_0_mst_valid processing_system7_0_FCLK_RESET0_N rst_ps7_0_100M_peripheral_aresetn axi_dma_0_m_axis_mm2s_tdata conv_accel_0_mst_last axi_dma_0_s_axis_s2mm_tready axi_intc_0_irq xlconcat_0_dout processing_system7_0_FCLK_CLK0 axi_dma_0_m_axis_mm2s_tlast axi_dma_0_s2mm_introut conv_accel_0_mst_data Net}]]
current_bd_design float
copy_bd_objs -from_design main / $tmpCopyObjs
regenerate_bd_layout
delete_bd_objs [get_bd_nets axi_dma_0_m_axis_mm2s_tdata] [get_bd_nets axi_dma_0_m_axis_mm2s_tlast] [get_bd_nets axi_dma_0_s_axis_s2mm_tready] [get_bd_nets conv_accel_0_mst_data] [get_bd_nets conv_accel_0_mst_last] [get_bd_nets conv_accel_0_mst_valid] [get_bd_nets Net] [get_bd_intf_nets axi_dma_0_M_AXIS_MM2S] [get_bd_intf_nets conv_accel_0_AXIS_MST] [get_bd_cells conv_accel_0]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:floating_point:7.1 floating_point_0
endgroup
set_property -dict [list CONFIG.Operation_Type {Multiply} CONFIG.Has_A_TLAST {true} CONFIG.Has_B_TLAST {true} CONFIG.RESULT_TLAST_Behv {OR_all_TLASTs} CONFIG.Result_Precision_Type {Single} CONFIG.C_Result_Exponent_Width {8} CONFIG.C_Result_Fraction_Width {24} CONFIG.C_Mult_Usage {Full_Usage} CONFIG.C_Latency {9} CONFIG.C_Rate {1}] [get_bd_cells floating_point_0]
set_property location {1.5 358 158} [get_bd_cells floating_point_0]
connect_bd_intf_net [get_bd_intf_pins floating_point_0/M_AXIS_RESULT] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
connect_bd_net [get_bd_pins floating_point_0/s_axis_a_tlast] [get_bd_pins floating_point_0/s_axis_a_tdata]
undo
connect_bd_net [get_bd_pins axi_dma_0/m_axis_mm2s_tlast] [get_bd_pins floating_point_0/s_axis_a_tlast]
connect_bd_net [get_bd_pins axi_dma_0/m_axis_mm2s_tlast] [get_bd_pins floating_point_0/s_axis_b_tlast]
connect_bd_net [get_bd_pins axi_dma_0/m_axis_mm2s_tready] [get_bd_pins floating_point_0/s_axis_a_tready]
delete_bd_objs [get_bd_nets floating_point_0_s_axis_a_tready]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0
endgroup
set_property -dict [list CONFIG.C_SIZE {1}] [get_bd_cells util_vector_logic_0]
connect_bd_net [get_bd_pins util_vector_logic_0/Res] [get_bd_pins axi_dma_0/m_axis_mm2s_tready]
connect_bd_net [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins floating_point_0/s_axis_a_tready]
connect_bd_net [get_bd_pins util_vector_logic_0/Op2] [get_bd_pins floating_point_0/s_axis_b_tready]
connect_bd_net [get_bd_pins floating_point_0/s_axis_b_tvalid] [get_bd_pins axi_dma_0/m_axis_mm2s_tvalid]
connect_bd_net [get_bd_pins axi_dma_0/m_axis_mm2s_tvalid] [get_bd_pins floating_point_0/s_axis_a_tvalid]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0
endgroup
set_property -dict [list CONFIG.DIN_FROM {31} CONFIG.DIN_WIDTH {64} CONFIG.DOUT_WIDTH {32}] [get_bd_cells xlslice_0]
connect_bd_net [get_bd_pins axi_dma_0/m_axis_mm2s_tdata] [get_bd_pins xlslice_0/Din]
connect_bd_net [get_bd_pins xlslice_0/Dout] [get_bd_pins floating_point_0/s_axis_a_tdata]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1
endgroup
set_property -dict [list CONFIG.DIN_TO {32} CONFIG.DIN_FROM {63} CONFIG.DIN_WIDTH {64} CONFIG.DOUT_WIDTH {32}] [get_bd_cells xlslice_1]
connect_bd_net [get_bd_pins axi_dma_0/m_axis_mm2s_tdata] [get_bd_pins xlslice_1/Din]
connect_bd_net [get_bd_pins xlslice_1/Dout] [get_bd_pins floating_point_0/s_axis_b_tdata]
connect_bd_net [get_bd_pins floating_point_0/aclk] [get_bd_pins processing_system7_0/FCLK_CLK0]
save_bd_design
regenerate_bd_layout
open_bd_design {C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd}
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
upgrade_ip -vlnv peteryuen:fl:conv_accel:1.0 [get_ips  main_conv_accel_0_2] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips main_conv_accel_0_2] -no_script -sync -force -quiet
generate_target all [get_files  C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd]
catch { config_ip_cache -export [get_ips -all main_processing_system7_0_0] }
catch { config_ip_cache -export [get_ips -all main_conv_accel_0_2] }
catch { config_ip_cache -export [get_ips -all main_auto_pc_0] }
catch { config_ip_cache -export [get_ips -all main_auto_us_0] }
catch { config_ip_cache -export [get_ips -all main_auto_pc_1] }
export_ip_user_files -of_objects [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd]
launch_runs -jobs 8 {main_processing_system7_0_0_synth_1 main_conv_accel_0_2_synth_1}
export_simulation -of_objects [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/main/main.bd] -directory C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files -ipstatic_source_dir C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/modelsim} {questa=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/questa} {riviera=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/riviera} {activehdl=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
report_ip_status -name ip_status 
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 8
wait_on_run impl_1
open_hw_manager
close_hw_manager
write_hw_platform -fixed -force  -include_bit -file C:/Users/Peter/Downloads/export/main_wrapper.xsa
# Disabling source management mode.  This is to allow the top design properties to be set without GUI intervention.
set_property source_mgmt_mode None [current_project]
set_property top float_wrapper [current_fileset]
# Re-enabling previously disabled source management mode.
set_property source_mgmt_mode All [current_project]
update_compile_order -fileset sources_1
generate_target all [get_files  C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/float/float.bd]
catch { config_ip_cache -export [get_ips -all float_axi_dma_0_0] }
catch { config_ip_cache -export [get_ips -all float_axi_intc_0_0] }
catch { config_ip_cache -export [get_ips -all float_xbar_0] }
catch { config_ip_cache -export [get_ips -all float_processing_system7_0_0] }
catch { config_ip_cache -export [get_ips -all float_xbar_1] }
catch { config_ip_cache -export [get_ips -all float_rst_ps7_0_100M_0] }
catch { config_ip_cache -export [get_ips -all float_floating_point_0_0] }
catch { config_ip_cache -export [get_ips -all float_util_vector_logic_0_0] }
catch { config_ip_cache -export [get_ips -all float_auto_us_0] }
catch { config_ip_cache -export [get_ips -all float_auto_pc_0] }
catch { config_ip_cache -export [get_ips -all float_auto_pc_1] }
export_ip_user_files -of_objects [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/float/float.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/float/float.bd]
launch_runs -jobs 8 {float_processing_system7_0_0_synth_1 float_floating_point_0_0_synth_1 float_util_vector_logic_0_0_synth_1}
export_simulation -of_objects [get_files C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/float/float.bd] -directory C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files -ipstatic_source_dir C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/modelsim} {questa=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/questa} {riviera=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/riviera} {activehdl=C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
write_hw_platform -fixed -force  -include_bit -file C:/Users/Peter/Downloads/export/float_wrapper.xsa
open_bd_design {C:/Users/Peter/Desktop/Projects/FPGA/pynq/pynq.srcs/sources_1/bd/float/float.bd}
